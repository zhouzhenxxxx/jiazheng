{"remainingRequest":"/Users/zhenzhou/briup1/7vue/waiterApp/node_modules/babel-loader/lib/index.js!/Users/zhenzhou/briup1/7vue/waiterApp/src/store/modules/user.js","dependencies":[{"path":"/Users/zhenzhou/briup1/7vue/waiterApp/src/store/modules/user.js","mtime":1572790410000},{"path":"/Users/zhenzhou/briup1/7vue/waiterApp/node_modules/cache-loader/dist/cjs.js","mtime":1571391164000},{"path":"/Users/zhenzhou/briup1/7vue/waiterApp/node_modules/babel-loader/lib/index.js","mtime":1571390905000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL3poZW56aG91L2JyaXVwMS83dnVlL3dhaXRlckFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUtY29yZWpzMy9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IHsgZ2V0LCBwb3N0X2pzb24sIHBvc3QgfSBmcm9tICIuLi8uLi9odHRwL2F4aW9zIjsKaW1wb3J0IHsgZ2V0VG9rZW4sIHNldFRva2VuLCByZW1vdmVUb2tlbiB9IGZyb20gIi4uLy4uL3V0aWxzL2F1dGgiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZXNwYWNlZDogdHJ1ZSwKICBzdGF0ZTogewogICAgdG9rZW46IGdldFRva2VuLAogICAgdXNlcmluZm86IHt9IC8v5ZGY5bel5L+h5oGvCgogIH0sCiAgZ2V0dGVyczoge30sCiAgbXV0YXRpb25zOiB7CiAgICByZWZyZXNoSW5mbzogZnVuY3Rpb24gcmVmcmVzaEluZm8oc3RhdGUsIHVzZXJpbmZvKSB7CiAgICAgIHN0YXRlLnVzZXJpbmZvID0gdXNlcmluZm87CiAgICB9LAogICAgcmVmcmVzaFRva2VuOiBmdW5jdGlvbiByZWZyZXNoVG9rZW4oc3RhdGUsIHRva2VuKSB7CiAgICAgIHN0YXRlLnRva2VuID0gdG9rZW47CiAgICB9CiAgfSwKICBhY3Rpb25zOiB7CiAgICBsb2dpbjogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX2xvZ2luID0gX2FzeW5jVG9HZW5lcmF0b3IoCiAgICAgIC8qI19fUFVSRV9fKi8KICAgICAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShjb250ZXh0LCBwYXlsb2FkKSB7CiAgICAgICAgdmFyIHJlc3BvbnNlLCB0b2tlbjsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBwb3N0X2pzb24oJy91c2VyL2xvZ2luJywgcGF5bG9hZCk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIC8vMi7ojrflj5Z0b2tlbgogICAgICAgICAgICAgICAgdG9rZW4gPSByZXNwb25zZS5kYXRhLnRva2VuOyAvLzMu5bCGdG9rZW7nvJPlrZjotbfmnaUKCiAgICAgICAgICAgICAgICBzZXRUb2tlbih0b2tlbik7IC8v5bCGdG9rZW7nu7TmiqTliLDnirbmgIHmnLrph4wKCiAgICAgICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgicmVmcmVzaFRva2VuIiwgdG9rZW4pOwoKICAgICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gbG9naW4oX3gsIF94MikgewogICAgICAgIHJldHVybiBfbG9naW4uYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIGxvZ2luOwogICAgfSgpLAogICAgLy/pgJrov4d0b2tlbuiOt+WPluWRmOW3peS/oeaBr2luZm8KICAgIGdldFVzZXJJbmZvOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfZ2V0VXNlckluZm8gPSBfYXN5bmNUb0dlbmVyYXRvcigKICAgICAgLyojX19QVVJFX18qLwogICAgICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMihjb250ZXh0LCB0b2tlbikgewogICAgICAgIHZhciByZXNwb25zZTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIGdldCgnL3VzZXIvaW5mbycsIHsKICAgICAgICAgICAgICAgICAgdG9rZW46IHRva2VuCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICAgIC8v5bCG55So5oi35L+h5oGv6K6+572u5YiwaW5mb+S4rQogICAgICAgICAgICAgICAgY29udGV4dC5jb21taXQoInJlZnJlc2hJbmZvIiwgcmVzcG9uc2UuZGF0YSk7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMik7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIGdldFVzZXJJbmZvKF94MywgX3g0KSB7CiAgICAgICAgcmV0dXJuIF9nZXRVc2VySW5mby5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gZ2V0VXNlckluZm87CiAgICB9KCksCiAgICBsb2dvdXQ6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9sb2dvdXQgPSBfYXN5bmNUb0dlbmVyYXRvcigKICAgICAgLyojX19QVVJFX18qLwogICAgICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMyhjb250ZXh0KSB7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBwb3N0KCcvdXNlci9sb2dvdXQnKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgLy8yLua4hemZpHRva2VuCiAgICAgICAgICAgICAgICByZW1vdmVUb2tlbigpOyAvLzMu5riF55CGc3RvcmUKCiAgICAgICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgicmVmcmVzaFRva2VuIiwgJycpOwogICAgICAgICAgICAgICAgY29udGV4dC5jb21taXQoInJlZnJlc2hJbmZvIiwge30pOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTMpOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiBsb2dvdXQoX3g1KSB7CiAgICAgICAgcmV0dXJuIF9sb2dvdXQuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIGxvZ291dDsKICAgIH0oKQogIH0KfTs="},{"version":3,"sources":["/Users/zhenzhou/briup1/7vue/waiterApp/src/store/modules/user.js"],"names":["get","post_json","post","getToken","setToken","removeToken","namespaced","state","token","userinfo","getters","mutations","refreshInfo","refreshToken","actions","login","context","payload","response","data","commit","getUserInfo","logout"],"mappings":";;AAAA,SAAQA,GAAR,EAAYC,SAAZ,EAAsBC,IAAtB;AACA,SAASC,QAAT,EAAkBC,QAAlB,EAA2BC,WAA3B;AACA,eAAc;AACVC,EAAAA,UAAU,EAAC,IADD;AAEVC,EAAAA,KAAK,EAAC;AACFC,IAAAA,KAAK,EAACL,QADJ;AAEFM,IAAAA,QAAQ,EAAC,EAFP,CAEU;;AAFV,GAFI;AAMVC,EAAAA,OAAO,EAAC,EANE;AASVC,EAAAA,SAAS,EAAC;AACNC,IAAAA,WADM,uBACML,KADN,EACYE,QADZ,EACqB;AACvBF,MAAAA,KAAK,CAACE,QAAN,GAAiBA,QAAjB;AACH,KAHK;AAINI,IAAAA,YAJM,wBAION,KAJP,EAIaC,KAJb,EAImB;AACrBD,MAAAA,KAAK,CAACC,KAAN,GAAcA,KAAd;AACH;AANK,GATA;AAiBVM,EAAAA,OAAO,EAAC;AACEC,IAAAA,KADF;AAAA;AAAA;AAAA,+CACQC,OADR,EACgBC,OADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAGqBhB,SAAS,CAAC,aAAD,EAAegB,OAAf,CAH9B;;AAAA;AAGIC,gBAAAA,QAHJ;AAIA;AACIV,gBAAAA,KALJ,GAKYU,QAAQ,CAACC,IAAT,CAAcX,KAL1B,EAMA;;AACAJ,gBAAAA,QAAQ,CAACI,KAAD,CAAR,CAPA,CAQA;;AACAQ,gBAAAA,OAAO,CAACI,MAAR,CAAe,cAAf,EAA8BZ,KAA9B;;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAYJ;AACMa,IAAAA,WAbF;AAAA;AAAA;AAAA,gDAacL,OAbd,EAasBR,KAbtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAcqBR,GAAG,CAAC,YAAD,EAAc;AAACQ,kBAAAA,KAAK,EAALA;AAAD,iBAAd,CAdxB;;AAAA;AAcIU,gBAAAA,QAdJ;AAeA;AACAF,gBAAAA,OAAO,CAACI,MAAR,CAAe,aAAf,EAA6BF,QAAQ,CAACC,IAAtC;;AAhBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAkBEG,IAAAA,MAlBF;AAAA;AAAA;AAAA,gDAkBSN,OAlBT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAoBMd,IAAI,CAAC,cAAD,CApBV;;AAAA;AAqBA;AACAG,gBAAAA,WAAW,GAtBX,CAuBA;;AACAW,gBAAAA,OAAO,CAACI,MAAR,CAAe,cAAf,EAA8B,EAA9B;AACAJ,gBAAAA,OAAO,CAACI,MAAR,CAAe,aAAf,EAA6B,EAA7B;;AAzBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAjBE,CAAd","sourcesContent":["import {get,post_json,post} from '../../http/axios'\nimport { getToken,setToken,removeToken } from '../../utils/auth'\nexport default{\n    namespaced:true,\n    state:{\n        token:getToken,\n        userinfo:{} //员工信息\n    },\n    getters:{\n\n    },\n    mutations:{\n        refreshInfo(state,userinfo){\n            state.userinfo = userinfo;\n        },\n        refreshToken(state,token){\n            state.token = token;\n        }\n    },\n    actions:{\n        async login(context,payload){\n            //1.登录\n            let response = await post_json('/user/login',payload);\n            //2.获取token\n            let token = response.data.token;\n            //3.将token缓存起来\n            setToken(token);\n            //将token维护到状态机里\n            context.commit(\"refreshToken\",token)\n        },\n\n        //通过token获取员工信息info\n        async getUserInfo(context,token){\n            let response = await get('/user/info',{token});\n            //将用户信息设置到info中\n            context.commit(\"refreshInfo\",response.data)\n        },\n        async logout(context){\n            //1.请求后台退出\n            await post('/user/logout');\n            //2.清除token\n            removeToken();\n            //3.清理store\n            context.commit(\"refreshToken\",'')\n            context.commit(\"refreshInfo\",{});\n\n        }\n    }\n}"]}]}
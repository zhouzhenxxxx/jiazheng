{"remainingRequest":"/Users/zhenzhou/briup1/7vue/waiterApp/node_modules/thread-loader/dist/cjs.js!/Users/zhenzhou/briup1/7vue/waiterApp/node_modules/babel-loader/lib/index.js!/Users/zhenzhou/briup1/7vue/waiterApp/src/store/modules/user.js","dependencies":[{"path":"/Users/zhenzhou/briup1/7vue/waiterApp/src/store/modules/user.js","mtime":1572571999000},{"path":"/Users/zhenzhou/briup1/7vue/waiterApp/node_modules/cache-loader/dist/cjs.js","mtime":1571391164000},{"path":"/Users/zhenzhou/briup1/7vue/waiterApp/node_modules/thread-loader/dist/cjs.js","mtime":1571391184000},{"path":"/Users/zhenzhou/briup1/7vue/waiterApp/node_modules/babel-loader/lib/index.js","mtime":1571390905000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL3poZW56aG91L2JyaXVwMS83dnVlL3dhaXRlckFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUtY29yZWpzMy9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IHsgZ2V0LCBwb3N0X2pzb24sIHBvc3QgfSBmcm9tICIuLi8uLi9odHRwL2F4aW9zIjsKaW1wb3J0IHsgZ2V0VG9rZW4sIHNldFRva2VuLCByZW1vdmVUb2tlbiB9IGZyb20gIi4uLy4uL3V0aWxzL2F1dGgiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZXNwYWNlZDogdHJ1ZSwKICBzdGF0ZTogewogICAgdG9rZW46IGdldFRva2VuLAogICAgdXNlcmluZm86IHt9IC8v5ZGY5bel5L+h5oGvCgogIH0sCiAgZ2V0dGVyczoge30sCiAgbXV0YXRpb25zOiB7CiAgICByZWZyZXNoSW5mbzogZnVuY3Rpb24gcmVmcmVzaEluZm8oc3RhdGUsIGluZm8pIHsKICAgICAgc3RhdGUuaW5mbyA9IHVzZXJpbmZvOwogICAgfSwKICAgIHJlZnJlc2hUb2tlbjogZnVuY3Rpb24gcmVmcmVzaFRva2VuKHN0YXRlLCB0b2tlbikgewogICAgICBzdGF0ZS50b2tlbiA9IHRva2VuOwogICAgfQogIH0sCiAgYWN0aW9uczogewogICAgbG9naW46IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9sb2dpbiA9IF9hc3luY1RvR2VuZXJhdG9yKAogICAgICAvKiNfX1BVUkVfXyovCiAgICAgIHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoY29udGV4dCwgcGF5bG9hZCkgewogICAgICAgIHZhciByZXNwb25zZSwgdG9rZW47CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gcG9zdF9qc29uKCcvdXNlci9sb2dpbicsIHBheWxvYWQpOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICAvLzIu6I635Y+WdG9rZW4KICAgICAgICAgICAgICAgIHRva2VuID0gcmVzcG9uc2UuZGF0YS50b2tlbjsgLy8zLuWwhnRva2Vu57yT5a2Y6LW35p2lCgogICAgICAgICAgICAgICAgc2V0VG9rZW4odG9rZW4pOyAvL+WwhnRva2Vu57u05oqk5Yiw54q25oCB5py66YeMCgogICAgICAgICAgICAgICAgY29udGV4dC5jb21taXQoInJlZnJlc2hUb2tlbiIsIHRva2VuKTsKCiAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIGxvZ2luKF94LCBfeDIpIHsKICAgICAgICByZXR1cm4gX2xvZ2luLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBsb2dpbjsKICAgIH0oKSwKICAgIC8v6YCa6L+HdG9rZW7ojrflj5blkZjlt6Xkv6Hmga9pbmZvCiAgICBnZXRVc2VySW5mbzogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX2dldFVzZXJJbmZvID0gX2FzeW5jVG9HZW5lcmF0b3IoCiAgICAgIC8qI19fUFVSRV9fKi8KICAgICAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoY29udGV4dCwgdG9rZW4pIHsKICAgICAgICB2YXIgcmVzcG9uc2U7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBnZXQoJy91c2VyL2luZm8nLCB7CiAgICAgICAgICAgICAgICAgIHRva2VuOiB0b2tlbgogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgICAvL+WwhueUqOaIt+S/oeaBr+iuvue9ruWIsGluZm/kuK0KICAgICAgICAgICAgICAgIGNvbnRleHQuY29tbWl0KCJyZWZyZXNoSW5mbyIsIHJlc3BvbnNlLmRhdGEpOwoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiBnZXRVc2VySW5mbyhfeDMsIF94NCkgewogICAgICAgIHJldHVybiBfZ2V0VXNlckluZm8uYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIGdldFVzZXJJbmZvOwogICAgfSgpLAogICAgbG9nb3V0OiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfbG9nb3V0ID0gX2FzeW5jVG9HZW5lcmF0b3IoCiAgICAgIC8qI19fUFVSRV9fKi8KICAgICAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoY29udGV4dCwgdG9rZW4pIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIHBvc3QoJy91c2VyL2xvZ291dCcsIHRva2VuKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgLy8yLua4hemZpHRva2VuCiAgICAgICAgICAgICAgICByZW1vdmVUb2tlbih0b2tlbik7IC8vMy7muIXnkIZzdG9yZQoKICAgICAgICAgICAgICAgIGNvbnRleHQuY29tbWl0KCJyZWZyZXNoSW5mbyIsIHt9KTsKICAgICAgICAgICAgICAgIGNvbnRleHQuY29tbWl0KCJyZWZyZXNoVG9rZW4iLCAnJyk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMyk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIGxvZ291dChfeDUsIF94NikgewogICAgICAgIHJldHVybiBfbG9nb3V0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBsb2dvdXQ7CiAgICB9KCkKICB9Cn07"},{"version":3,"sources":["/Users/zhenzhou/briup1/7vue/waiterApp/src/store/modules/user.js"],"names":["get","post_json","post","getToken","setToken","removeToken","namespaced","state","token","userinfo","getters","mutations","refreshInfo","info","refreshToken","actions","login","context","payload","response","data","commit","getUserInfo","logout"],"mappings":";;AAAA,SAAQA,GAAR,EAAYC,SAAZ,EAAsBC,IAAtB;AACA,SAASC,QAAT,EAAkBC,QAAlB,EAA2BC,WAA3B;AACA,eAAc;AACVC,EAAAA,UAAU,EAAC,IADD;AAEVC,EAAAA,KAAK,EAAC;AACFC,IAAAA,KAAK,EAACL,QADJ;AAEFM,IAAAA,QAAQ,EAAC,EAFP,CAEU;;AAFV,GAFI;AAMVC,EAAAA,OAAO,EAAC,EANE;AASVC,EAAAA,SAAS,EAAC;AACNC,IAAAA,WADM,uBACML,KADN,EACYM,IADZ,EACiB;AACnBN,MAAAA,KAAK,CAACM,IAAN,GAAaJ,QAAb;AACH,KAHK;AAINK,IAAAA,YAJM,wBAIOP,KAJP,EAIaC,KAJb,EAImB;AACrBD,MAAAA,KAAK,CAACC,KAAN,GAAcA,KAAd;AACH;AANK,GATA;AAiBVO,EAAAA,OAAO,EAAC;AACEC,IAAAA,KADF;AAAA;AAAA;AAAA,+CACQC,OADR,EACgBC,OADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAGqBjB,SAAS,CAAC,aAAD,EAAeiB,OAAf,CAH9B;;AAAA;AAGIC,gBAAAA,QAHJ;AAIA;AACIX,gBAAAA,KALJ,GAKYW,QAAQ,CAACC,IAAT,CAAcZ,KAL1B,EAMA;;AACAJ,gBAAAA,QAAQ,CAACI,KAAD,CAAR,CAPA,CAQA;;AACAS,gBAAAA,OAAO,CAACI,MAAR,CAAe,cAAf,EAA8Bb,KAA9B;;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAYJ;AACMc,IAAAA,WAbF;AAAA;AAAA;AAAA,gDAacL,OAbd,EAasBT,KAbtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAcqBR,GAAG,CAAC,YAAD,EAAc;AAACQ,kBAAAA,KAAK,EAALA;AAAD,iBAAd,CAdxB;;AAAA;AAcIW,gBAAAA,QAdJ;AAeA;AACAF,gBAAAA,OAAO,CAACI,MAAR,CAAe,aAAf,EAA6BF,QAAQ,CAACC,IAAtC;;AAhBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAkBEG,IAAAA,MAlBF;AAAA;AAAA;AAAA,gDAkBSN,OAlBT,EAkBiBT,KAlBjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAoBMN,IAAI,CAAC,cAAD,EAAgBM,KAAhB,CApBV;;AAAA;AAqBA;AACAH,gBAAAA,WAAW,CAACG,KAAD,CAAX,CAtBA,CAuBA;;AACAS,gBAAAA,OAAO,CAACI,MAAR,CAAe,aAAf,EAA6B,EAA7B;AACAJ,gBAAAA,OAAO,CAACI,MAAR,CAAe,cAAf,EAA8B,EAA9B;;AAzBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAjBE,CAAd","sourcesContent":["import {get,post_json,post} from '../../http/axios'\nimport { getToken,setToken,removeToken } from '../../utils/auth'\nexport default{\n    namespaced:true,\n    state:{\n        token:getToken,\n        userinfo:{} //员工信息\n    },\n    getters:{\n\n    },\n    mutations:{\n        refreshInfo(state,info){\n            state.info = userinfo;\n        },\n        refreshToken(state,token){\n            state.token = token;\n        }\n    },\n    actions:{\n        async login(context,payload){\n            //1.登录\n            let response = await post_json('/user/login',payload);\n            //2.获取token\n            let token = response.data.token;\n            //3.将token缓存起来\n            setToken(token);\n            //将token维护到状态机里\n            context.commit(\"refreshToken\",token)\n        },\n\n        //通过token获取员工信息info\n        async getUserInfo(context,token){\n            let response = await get('/user/info',{token});\n            //将用户信息设置到info中\n            context.commit(\"refreshInfo\",response.data)\n        },\n        async logout(context,token){\n            //1.请求后台退出\n            await post('/user/logout',token);\n            //2.清除token\n            removeToken(token);\n            //3.清理store\n            context.commit(\"refreshInfo\",{});\n            context.commit(\"refreshToken\",'')\n\n        }\n    }\n}"]}]}
{"remainingRequest":"/Users/zhenzhou/briup1/7vue/waiterApp/node_modules/babel-loader/lib/index.js!/Users/zhenzhou/briup1/7vue/waiterApp/src/store/modules/order.js","dependencies":[{"path":"/Users/zhenzhou/briup1/7vue/waiterApp/src/store/modules/order.js","mtime":1572785285000},{"path":"/Users/zhenzhou/briup1/7vue/waiterApp/node_modules/cache-loader/dist/cjs.js","mtime":1571391164000},{"path":"/Users/zhenzhou/briup1/7vue/waiterApp/node_modules/babel-loader/lib/index.js","mtime":1571390905000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL3poZW56aG91L2JyaXVwMS83dnVlL3dhaXRlckFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUtY29yZWpzMy9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IHsgZ2V0IH0gZnJvbSAiLi4vLi4vaHR0cC9heGlvcyI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lc3BhY2VkOiB0cnVlLAogIHN0YXRlOiB7CiAgICBvcmRlcnM6IFtdCiAgfSwKICBnZXR0ZXJzOiB7CiAgICBvcmRlclN0YXR1c0ZpbHRlcjogZnVuY3Rpb24gb3JkZXJTdGF0dXNGaWx0ZXIoc3RhdGUpIHsKICAgICAgcmV0dXJuIGZ1bmN0aW9uIChzdGF0dXMpIHsKICAgICAgICByZXR1cm4gc3RhdGUub3JkZXJzLmZpbHRlcihmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgcmV0dXJuIGl0ZW0uc3RhdHVzID09PSBzdGF0dXM7CiAgICAgICAgfSk7CiAgICAgIH07CiAgICB9CiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIHJlZnJlc2hPcmRlcnM6IGZ1bmN0aW9uIHJlZnJlc2hPcmRlcnMoc3RhdGUsIG9yZGVycykgewogICAgICBzdGF0ZS5vcmRlcnMgPSBvcmRlcnM7CiAgICB9CiAgfSwKICBhY3Rpb25zOiB7CiAgICAvLyDmoLnmja7mjIflrprlkZjlt6XkuIvnmoTorqLljZXkv6Hmga8KICAgIGZpbmRXYWl0ZXJPcmRlcnM6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9maW5kV2FpdGVyT3JkZXJzID0gX2FzeW5jVG9HZW5lcmF0b3IoCiAgICAgIC8qI19fUFVSRV9fKi8KICAgICAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShfcmVmKSB7CiAgICAgICAgdmFyIGNvbW1pdCwgcm9vdFN0YXRlLCByZXNwb25zZTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBjb21taXQgPSBfcmVmLmNvbW1pdCwgcm9vdFN0YXRlID0gX3JlZi5yb290U3RhdGU7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiBnZXQoIi9vcmRlci9xdWVyeSIsIHsKICAgICAgICAgICAgICAgICAgd2FpdGVySWQ6IHJvb3RTdGF0ZS51c2VyLnVzZXJpbmZvLmlkCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgY29tbWl0KCJyZWZyZXNoT3JkZXJzIiwgcmVzcG9uc2UuZGF0YSk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiBmaW5kV2FpdGVyT3JkZXJzKF94KSB7CiAgICAgICAgcmV0dXJuIF9maW5kV2FpdGVyT3JkZXJzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBmaW5kV2FpdGVyT3JkZXJzOwogICAgfSgpLAogICAgLy8g5o6l5Y+X6K6i5Y2VCiAgICBhY2NlcHRPcmRlcjogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX2FjY2VwdE9yZGVyID0gX2FzeW5jVG9HZW5lcmF0b3IoCiAgICAgIC8qI19fUFVSRV9fKi8KICAgICAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoX3JlZjIsIG9yZGVySWQpIHsKICAgICAgICB2YXIgc3RhdGUsIGRpc3BhdGNoLCByZXNwb25zZTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgc3RhdGUgPSBfcmVmMi5zdGF0ZSwgZGlzcGF0Y2ggPSBfcmVmMi5kaXNwYXRjaDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiBnZXQoIi9vcmRlci90YWtlT3JkZXIiLCB7CiAgICAgICAgICAgICAgICAgIG9yZGVySWQ6IG9yZGVySWQKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgICAgZGlzcGF0Y2goImZpbmRXYWl0ZXJPcmRlcnMiKTsKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCByZXNwb25zZSk7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMik7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIGFjY2VwdE9yZGVyKF94MiwgX3gzKSB7CiAgICAgICAgcmV0dXJuIF9hY2NlcHRPcmRlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gYWNjZXB0T3JkZXI7CiAgICB9KCksCiAgICAvLyDmi5Lnu53orqLljZUKICAgIHJlamVjdE9yZGVyOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfcmVqZWN0T3JkZXIgPSBfYXN5bmNUb0dlbmVyYXRvcigKICAgICAgLyojX19QVVJFX18qLwogICAgICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMyhfcmVmMywgb3JkZXJJZCkgewogICAgICAgIHZhciBkaXNwYXRjaCwgcmVzcG9uc2U7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGRpc3BhdGNoID0gX3JlZjMuZGlzcGF0Y2g7CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gZ2V0KCIvb3JkZXIvcmVqZWN0T3JkZXIiLCB7CiAgICAgICAgICAgICAgICAgIG9yZGVySWQ6IG9yZGVySWQKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0My5zZW50OwogICAgICAgICAgICAgICAgZGlzcGF0Y2goImZpbmRXYWl0ZXJPcmRlcnMiKTsKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuYWJydXB0KCJyZXR1cm4iLCByZXNwb25zZSk7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMyk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIHJlamVjdE9yZGVyKF94NCwgX3g1KSB7CiAgICAgICAgcmV0dXJuIF9yZWplY3RPcmRlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gcmVqZWN0T3JkZXI7CiAgICB9KCksCiAgICAvLyDlrozmiJDorqLljZUgCiAgICBjb21wbGV0ZU9yZGVyOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfY29tcGxldGVPcmRlciA9IF9hc3luY1RvR2VuZXJhdG9yKAogICAgICAvKiNfX1BVUkVfXyovCiAgICAgIHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU0KF9yZWY0LCBvcmRlcklkKSB7CiAgICAgICAgdmFyIGRpc3BhdGNoLCByZXNwb25zZTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQkKF9jb250ZXh0NCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDQucHJldiA9IF9jb250ZXh0NC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgZGlzcGF0Y2ggPSBfcmVmNC5kaXNwYXRjaDsKICAgICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiBnZXQoIi9vcmRlci9zZXJ2aWNlQ29tcGxldGVPcmRlciIsIHsKICAgICAgICAgICAgICAgICAgb3JkZXJJZDogb3JkZXJJZAogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQ0LnNlbnQ7CiAgICAgICAgICAgICAgICBkaXNwYXRjaCgiZmluZFdhaXRlck9yZGVycyIpOwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5hYnJ1cHQoInJldHVybiIsIHJlc3BvbnNlKTsKCiAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWU0KTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gY29tcGxldGVPcmRlcihfeDYsIF94NykgewogICAgICAgIHJldHVybiBfY29tcGxldGVPcmRlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gY29tcGxldGVPcmRlcjsKICAgIH0oKQogIH0KfTs="},{"version":3,"sources":["/Users/zhenzhou/briup1/7vue/waiterApp/src/store/modules/order.js"],"names":["get","namespaced","state","orders","getters","orderStatusFilter","status","filter","item","mutations","refreshOrders","actions","findWaiterOrders","commit","rootState","waiterId","user","userinfo","id","response","data","acceptOrder","orderId","dispatch","rejectOrder","completeOrder"],"mappings":";;;AAAA,SAAQA,GAAR;AACA,eAAe;AACbC,EAAAA,UAAU,EAAC,IADE;AAEbC,EAAAA,KAAK,EAAC;AACJC,IAAAA,MAAM,EAAC;AADH,GAFO;AAKbC,EAAAA,OAAO,EAAC;AACNC,IAAAA,iBADM,6BACYH,KADZ,EACkB;AACtB,aAAO,UAACI,MAAD,EAAU;AACf,eAAOJ,KAAK,CAACC,MAAN,CAAaI,MAAb,CAAoB,UAAAC,IAAI;AAAA,iBAAEA,IAAI,CAACF,MAAL,KAAgBA,MAAlB;AAAA,SAAxB,CAAP;AACD,OAFD;AAGD;AALK,GALK;AAYbG,EAAAA,SAAS,EAAC;AACRC,IAAAA,aADQ,yBACMR,KADN,EACaC,MADb,EACoB;AAC1BD,MAAAA,KAAK,CAACC,MAAN,GAAeA,MAAf;AACD;AAHO,GAZG;AAiBbQ,EAAAA,OAAO,EAAC;AACN;AACMC,IAAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEkBC,gBAAAA,MAFlB,QAEkBA,MAFlB,EAEyBC,SAFzB,QAEyBA,SAFzB;AAAA;AAAA,uBAGiBd,GAAG,CAAC,cAAD,EAAgB;AAACe,kBAAAA,QAAQ,EAACD,SAAS,CAACE,IAAV,CAAeC,QAAf,CAAwBC;AAAlC,iBAAhB,CAHpB;;AAAA;AAGAC,gBAAAA,QAHA;AAIJN,gBAAAA,MAAM,CAAC,eAAD,EAAiBM,QAAQ,CAACC,IAA1B,CAAN;;AAJI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAMN;AACMC,IAAAA,WAPA;AAAA;AAAA;AAAA,uDAO6BC,OAP7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAOapB,gBAAAA,KAPb,SAOaA,KAPb,EAOmBqB,QAPnB,SAOmBA,QAPnB;AAAA;AAAA,uBAQiBvB,GAAG,CAAC,kBAAD,EAAoB;AAACsB,kBAAAA,OAAO,EAAPA;AAAD,iBAApB,CARpB;;AAAA;AAQAH,gBAAAA,QARA;AASJI,gBAAAA,QAAQ,CAAC,kBAAD,CAAR;AATI,kDAUGJ,QAVH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAYN;AACMK,IAAAA,WAbA;AAAA;AAAA;AAAA,uDAauBF,OAbvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAaaC,gBAAAA,QAbb,SAaaA,QAbb;AAAA;AAAA,uBAciBvB,GAAG,CAAC,oBAAD,EAAsB;AAACsB,kBAAAA,OAAO,EAAPA;AAAD,iBAAtB,CAdpB;;AAAA;AAcAH,gBAAAA,QAdA;AAeJI,gBAAAA,QAAQ,CAAC,kBAAD,CAAR;AAfI,kDAgBGJ,QAhBH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAkBN;AACMM,IAAAA,aAnBA;AAAA;AAAA;AAAA,uDAmByBH,OAnBzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBeC,gBAAAA,QAnBf,SAmBeA,QAnBf;AAAA;AAAA,uBAoBiBvB,GAAG,CAAC,6BAAD,EAA+B;AAACsB,kBAAAA,OAAO,EAAPA;AAAD,iBAA/B,CApBpB;;AAAA;AAoBAH,gBAAAA,QApBA;AAqBJI,gBAAAA,QAAQ,CAAC,kBAAD,CAAR;AArBI,kDAsBGJ,QAtBH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAjBK,CAAf","sourcesContent":["import {get} from '../../http/axios'\nexport default {\n  namespaced:true,\n  state:{\n    orders:[]\n  },\n  getters:{\n    orderStatusFilter(state){\n      return (status)=>{\n        return state.orders.filter(item=>item.status === status)\n      }\n    }\n  },\n  mutations:{\n    refreshOrders(state, orders){\n      state.orders = orders;\n    }\n  },\n  actions:{\n    // 根据指定员工下的订单信息\n    async findWaiterOrders({commit,rootState}){\n      let response = await get(\"/order/query\",{waiterId:rootState.user.userinfo.id});\n      commit(\"refreshOrders\",response.data)\n    },\n    // 接受订单\n    async acceptOrder({state,dispatch},orderId){\n      let response = await get(\"/order/takeOrder\",{orderId});\n      dispatch(\"findWaiterOrders\");\n      return response;\n    },\n    // 拒绝订单\n    async rejectOrder({dispatch},orderId){\n      let response = await get(\"/order/rejectOrder\",{orderId});\n      dispatch(\"findWaiterOrders\");\n      return response;\n    },\n    // 完成订单 \n    async completeOrder({dispatch},orderId){\n      let response = await get(\"/order/serviceCompleteOrder\",{orderId});\n      dispatch(\"findWaiterOrders\");\n      return response;\n    }\n  }\n}"]}]}
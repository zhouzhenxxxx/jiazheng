{"remainingRequest":"/Users/zhenzhou/briup1/7vue/waiter01/node_modules/babel-loader/lib/index.js!/Users/zhenzhou/briup1/7vue/waiter01/src/store/modules/user.js","dependencies":[{"path":"/Users/zhenzhou/briup1/7vue/waiter01/src/store/modules/user.js","mtime":1572418458000},{"path":"/Users/zhenzhou/briup1/7vue/waiter01/node_modules/cache-loader/dist/cjs.js","mtime":1571391164000},{"path":"/Users/zhenzhou/briup1/7vue/waiter01/node_modules/babel-loader/lib/index.js","mtime":1571390905000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL3poZW56aG91L2JyaXVwMS83dnVlL3dhaXRlcjAxL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS1jb3JlanMzL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgeyBnZXQsIHBvc3RfanNvbiwgcG9zdCB9IGZyb20gIi4uLy4uL2h0dHAvYXhpb3MiOwppbXBvcnQgeyBnZXRUb2tlbiwgc2V0VG9rZW4sIHJlbW92ZVRva2VuIH0gZnJvbSAiLi4vLi4vdXRpbHMvYXV0aCI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lc3BhY2VkOiB0cnVlLAogIHN0YXRlOiB7CiAgICB0b2tlbjogZ2V0VG9rZW4sCiAgICBpbmZvOiB7fSAvL+WRmOW3peS/oeaBrwoKICB9LAogIGdldHRlcnM6IHt9LAogIG11dGF0aW9uczogewogICAgcmVmcmVzaEluZm86IGZ1bmN0aW9uIHJlZnJlc2hJbmZvKHN0YXRlLCBpbmZvKSB7CiAgICAgIHN0YXRlLmluZm8gPSBpbmZvOwogICAgfSwKICAgIHJlZnJlc2hUb2tlbjogZnVuY3Rpb24gcmVmcmVzaFRva2VuKHN0YXRlLCB0b2tlbikgewogICAgICBzdGF0ZS50b2tlbiA9IHRva2VuOwogICAgfQogIH0sCiAgYWN0aW9uczogewogICAgbG9naW46IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9sb2dpbiA9IF9hc3luY1RvR2VuZXJhdG9yKAogICAgICAvKiNfX1BVUkVfXyovCiAgICAgIHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoY29udGV4dCwgcGF5bG9hZCkgewogICAgICAgIHZhciByZXNwb25zZSwgdG9rZW47CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gcG9zdF9qc29uKCcvdXNlci9sb2dpbicsIHBheWxvYWQpOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICAvLzIu6I635Y+WdG9rZW4KICAgICAgICAgICAgICAgIHRva2VuID0gcmVzcG9uc2UuZGF0YS50b2tlbjsgLy8zLuWwhnRva2Vu57yT5a2Y6LW35p2lCgogICAgICAgICAgICAgICAgc2V0VG9rZW4odG9rZW4pOyAvL+WwhnRva2Vu57u05oqk5Yiw54q25oCB5py66YeMCgogICAgICAgICAgICAgICAgY29udGV4dC5jb21taXQoInJlZnJlc2hUb2tlbiIsIHRva2VuKTsgLy8gLy/pgJrov4d0b2tlbuiOt+WPluWRmOW3peeahOS/oeaBrwogICAgICAgICAgICAgICAgLy8gY29udGV4dC5kaXNwYXRjaCgiaW5mbyIsdG9rZW4pCgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiBsb2dpbihfeCwgX3gyKSB7CiAgICAgICAgcmV0dXJuIF9sb2dpbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gbG9naW47CiAgICB9KCksCiAgICAvL+mAmui/h3Rva2Vu6I635Y+W5ZGY5bel5L+h5oGvaW5mbwogICAgaW5mbzogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX2luZm8gPSBfYXN5bmNUb0dlbmVyYXRvcigKICAgICAgLyojX19QVVJFX18qLwogICAgICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMihjb250ZXh0LCB0b2tlbikgewogICAgICAgIHZhciByZXNwb25zZTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIGdldCgnL3VzZXIvaW5mbycsIHsKICAgICAgICAgICAgICAgICAgdG9rZW46IHRva2VuCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICAgIC8v5bCG55So5oi35L+h5oGv6K6+572u5YiwaW5mb+S4rQogICAgICAgICAgICAgICAgY29udGV4dC5jb21taXQoInJlZnJlc2hJbmZvIiwgcmVzcG9uc2UuZGF0YSk7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMik7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIGluZm8oX3gzLCBfeDQpIHsKICAgICAgICByZXR1cm4gX2luZm8uYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIGluZm87CiAgICB9KCksCiAgICBsb2dvdXQ6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9sb2dvdXQgPSBfYXN5bmNUb0dlbmVyYXRvcigKICAgICAgLyojX19QVVJFX18qLwogICAgICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMyhjb250ZXh0LCB0b2tlbikgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gcG9zdCgnL3VzZXIvbG9nb3V0JywgdG9rZW4pOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICAvLzIu5riF6ZmkdG9rZW4KICAgICAgICAgICAgICAgIHJlbW92ZVRva2VuKHRva2VuKTsgLy8zLua4heeQhnN0b3JlCgogICAgICAgICAgICAgICAgY29udGV4dC5jb21taXQoInJlZnJlc2hJbmZvIiwge30pOwogICAgICAgICAgICAgICAgY29udGV4dC5jb21taXQoInJlZnJlc2hUb2tlbiIsICcnKTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUzKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gbG9nb3V0KF94NSwgX3g2KSB7CiAgICAgICAgcmV0dXJuIF9sb2dvdXQuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIGxvZ291dDsKICAgIH0oKQogIH0KfTs="},{"version":3,"sources":["/Users/zhenzhou/briup1/7vue/waiter01/src/store/modules/user.js"],"names":["get","post_json","post","getToken","setToken","removeToken","namespaced","state","token","info","getters","mutations","refreshInfo","refreshToken","actions","login","context","payload","response","data","commit","logout"],"mappings":";;AAAA,SAAQA,GAAR,EAAYC,SAAZ,EAAsBC,IAAtB;AACA,SAASC,QAAT,EAAkBC,QAAlB,EAA2BC,WAA3B;AACA,eAAc;AACVC,EAAAA,UAAU,EAAC,IADD;AAEVC,EAAAA,KAAK,EAAC;AACFC,IAAAA,KAAK,EAACL,QADJ;AAEFM,IAAAA,IAAI,EAAC,EAFH,CAEM;;AAFN,GAFI;AAMVC,EAAAA,OAAO,EAAC,EANE;AASVC,EAAAA,SAAS,EAAC;AACNC,IAAAA,WADM,uBACML,KADN,EACYE,IADZ,EACiB;AACnBF,MAAAA,KAAK,CAACE,IAAN,GAAaA,IAAb;AACH,KAHK;AAINI,IAAAA,YAJM,wBAION,KAJP,EAIaC,KAJb,EAImB;AACrBD,MAAAA,KAAK,CAACC,KAAN,GAAcA,KAAd;AACH;AANK,GATA;AAiBVM,EAAAA,OAAO,EAAC;AACEC,IAAAA,KADF;AAAA;AAAA;AAAA,+CACQC,OADR,EACgBC,OADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAGqBhB,SAAS,CAAC,aAAD,EAAegB,OAAf,CAH9B;;AAAA;AAGIC,gBAAAA,QAHJ;AAIA;AACIV,gBAAAA,KALJ,GAKYU,QAAQ,CAACC,IAAT,CAAcX,KAL1B,EAMA;;AACAJ,gBAAAA,QAAQ,CAACI,KAAD,CAAR,CAPA,CAQA;;AACAQ,gBAAAA,OAAO,CAACI,MAAR,CAAe,cAAf,EAA8BZ,KAA9B,EATA,CAUA;AACA;;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAaJ;AACMC,IAAAA,IAdF;AAAA;AAAA;AAAA,gDAcOO,OAdP,EAceR,KAdf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAeqBR,GAAG,CAAC,YAAD,EAAc;AAACQ,kBAAAA,KAAK,EAALA;AAAD,iBAAd,CAfxB;;AAAA;AAeIU,gBAAAA,QAfJ;AAgBA;AACAF,gBAAAA,OAAO,CAACI,MAAR,CAAe,aAAf,EAA6BF,QAAQ,CAACC,IAAtC;;AAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAmBEE,IAAAA,MAnBF;AAAA;AAAA;AAAA,gDAmBSL,OAnBT,EAmBiBR,KAnBjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAqBMN,IAAI,CAAC,cAAD,EAAgBM,KAAhB,CArBV;;AAAA;AAsBA;AACAH,gBAAAA,WAAW,CAACG,KAAD,CAAX,CAvBA,CAwBA;;AACAQ,gBAAAA,OAAO,CAACI,MAAR,CAAe,aAAf,EAA6B,EAA7B;AACAJ,gBAAAA,OAAO,CAACI,MAAR,CAAe,cAAf,EAA8B,EAA9B;;AA1BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAjBE,CAAd","sourcesContent":["import {get,post_json,post} from '../../http/axios'\nimport { getToken,setToken,removeToken } from '../../utils/auth'\nexport default{\n    namespaced:true,\n    state:{\n        token:getToken,\n        info:{} //员工信息\n    },\n    getters:{\n\n    },\n    mutations:{\n        refreshInfo(state,info){\n            state.info = info;\n        },\n        refreshToken(state,token){\n            state.token = token;\n        }\n    },\n    actions:{\n        async login(context,payload){\n            //1.登录\n            let response = await post_json('/user/login',payload);\n            //2.获取token\n            let token = response.data.token;\n            //3.将token缓存起来\n            setToken(token);\n            //将token维护到状态机里\n            context.commit(\"refreshToken\",token)\n            // //通过token获取员工的信息\n            // context.dispatch(\"info\",token)\n        },\n        //通过token获取员工信息info\n        async info(context,token){\n            let response = await get('/user/info',{token});\n            //将用户信息设置到info中\n            context.commit(\"refreshInfo\",response.data)\n        },\n        async logout(context,token){\n            //1.请求后台退出\n            await post('/user/logout',token);\n            //2.清除token\n            removeToken(token);\n            //3.清理store\n            context.commit(\"refreshInfo\",{});\n            context.commit(\"refreshToken\",'')\n\n        }\n    }\n}"]}]}
{"remainingRequest":"/Users/zhenzhou/briup1/7vue/waiterApp/node_modules/babel-loader/lib/index.js!/Users/zhenzhou/briup1/7vue/waiterApp/src/http/axios.js","dependencies":[{"path":"/Users/zhenzhou/briup1/7vue/waiterApp/src/http/axios.js","mtime":1572785196000},{"path":"/Users/zhenzhou/briup1/7vue/waiterApp/node_modules/cache-loader/dist/cjs.js","mtime":1571391164000},{"path":"/Users/zhenzhou/briup1/7vue/waiterApp/node_modules/babel-loader/lib/index.js","mtime":1571390905000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCBxcyBmcm9tICdxcyc7IC8vIOWFqOWxgOmFjee9rgovLyBheGlvcy5kZWZhdWx0cy5oZWFkZXJzLmNvbW1vblsidG9rZW4iXSA9ICIiCi8vIGF4aW9zLmRlZmF1bHRzLmhlYWRlcnMucG9zdFsiQ29udGVudC1UeXBlIl0gPSAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkO2NoYXJzZXQ9VVRGLTgnOwoKYXhpb3MuZGVmYXVsdHMuYmFzZVVSTCA9ICdodHRwOi8vMzkuMTA1LjE0Mi4yODo2Njc3JzsgLy8gQWRkIGEgcmVzcG9uc2UgaW50ZXJjZXB0b3IKCmF4aW9zLmludGVyY2VwdG9ycy5yZXNwb25zZS51c2UoZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgLy8g5bCG5ZCO5Y+w55qE5Y+C5pWw57uT5p6c6K6+572u5YiwcmVzcG9uc2UKICB2YXIgZGF0YSA9IHJlc3BvbnNlLmRhdGE7CiAgcmVzcG9uc2UuZGF0YSA9IGRhdGEuZGF0YTsKICByZXNwb25zZS5zdGF0dXMgPSBkYXRhLnN0YXR1czsKICByZXNwb25zZS5zdGF0dXNUZXh0ID0gZGF0YS5tZXNzYWdlOyAvL+e7n+S4gOW8guW4uOWkhOeQhgoKICBpZiAoZGF0YS5zdGF0dXMgIT09IDIwMCkgewogICAgYWxlcnQoZGF0YS5tZXNzYWdlKTsKICAgIHJldHVybiBQcm9taXNlLnJlamVjdChkYXRhLm1lc3NhZ2UpOwogIH0KCiAgcmV0dXJuIHJlc3BvbnNlOwp9LCBmdW5jdGlvbiAoZXJyb3IpIHsKICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpOwp9KTsKLyoqCiAqIOaPkOS6pHBvc3Tor7fmsYIg5Y+R6YCB55qE5pWw5o2u5Li65p+l6K+i5a2X56ym5Liy77yMa2V5PXZhbCZrZXk9dmFsCiovCgpleHBvcnQgZnVuY3Rpb24gcG9zdCh1cmwsIGRhdGEpIHsKICByZXR1cm4gYXhpb3MoewogICAgbWV0aG9kOiAicG9zdCIsCiAgICB1cmw6IHVybCwKICAgIGRhdGE6IHFzLnN0cmluZ2lmeShkYXRhKSwKICAgIHRpbWVvdXQ6IDEwMDAwLAogICAgaGVhZGVyczogewogICAgICAnWC1SZXF1ZXN0ZWQtV2l0aCc6ICdYTUxIdHRwUmVxdWVzdCcsCiAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkOyBjaGFyc2V0PVVURi04JwogICAgfQogIH0pOwp9Ci8qKgogKiDmj5DkuqRwb3N06K+35rGCIOWPkemAgeeahOaVsOaNruS4uuafpeivouWtl+espuS4su+8jOW9k+WPguaVsOS4uuaVsOe7hOeahOaXtuWAmemAgueUqOivpeaWueazlQogKiBpZHM9MSZpZHM9MgoqLwoKZXhwb3J0IGZ1bmN0aW9uIHBvc3RfYXJyYXkodXJsLCBkYXRhKSB7CiAgcmV0dXJuIGF4aW9zKHsKICAgIG1ldGhvZDogInBvc3QiLAogICAgdXJsOiB1cmwsCiAgICBkYXRhOiBxcy5zdHJpbmdpZnkoZGF0YSwgewogICAgICBhcnJheUZvcm1hdDogInJlcGVhdCIKICAgIH0pLAogICAgdGltZW91dDogMTAwMDAsCiAgICBoZWFkZXJzOiB7CiAgICAgICdYLVJlcXVlc3RlZC1XaXRoJzogJ1hNTEh0dHBSZXF1ZXN0JywKICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLTgnCiAgICB9CiAgfSk7Cn0KLyoqCiAqIOaPkOS6pHBvc3Tor7fmsYIg5Y+R6YCB55qE5pWw5o2u5Li6anNvbuWtl+espuS4sgoqLwoKZXhwb3J0IGZ1bmN0aW9uIHBvc3RfanNvbih1cmwsIGRhdGEpIHsKICByZXR1cm4gYXhpb3MoewogICAgbWV0aG9kOiAicG9zdCIsCiAgICB1cmw6IHVybCwKICAgIGRhdGE6IGRhdGEsCiAgICB0aW1lb3V0OiAxMDAwMAogIH0pOwp9CmV4cG9ydCBmdW5jdGlvbiBnZXQodXJsLCBwYXJhbXMpIHsKICByZXR1cm4gYXhpb3MoewogICAgbWV0aG9kOiAnZ2V0JywKICAgIHVybDogdXJsLAogICAgcGFyYW1zOiBwYXJhbXMsCiAgICAvLyBnZXQg6K+35rGC5pe25bim55qE5Y+C5pWwCiAgICB0aW1lb3V0OiAxMDAwMCwKICAgIGhlYWRlcnM6IHsKICAgICAgJ1gtUmVxdWVzdGVkLVdpdGgnOiAnWE1MSHR0cFJlcXVlc3QnCiAgICB9CiAgfSk7Cn0="},{"version":3,"sources":["/Users/zhenzhou/briup1/7vue/waiterApp/src/http/axios.js"],"names":["axios","qs","defaults","baseURL","interceptors","response","use","data","status","statusText","message","alert","Promise","reject","error","post","url","method","stringify","timeout","headers","post_array","arrayFormat","post_json","get","params"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,IAAf,C,CAEA;AACA;AACA;;AACAD,KAAK,CAACE,QAAN,CAAeC,OAAf,GAAyB,2BAAzB,C,CAGA;;AACAH,KAAK,CAACI,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B,CAAgC,UAAUD,QAAV,EAAoB;AAClD;AADkD,MAE7CE,IAF6C,GAErCF,QAFqC,CAE7CE,IAF6C;AAGlDF,EAAAA,QAAQ,CAACE,IAAT,GAAgBA,IAAI,CAACA,IAArB;AACAF,EAAAA,QAAQ,CAACG,MAAT,GAAkBD,IAAI,CAACC,MAAvB;AACAH,EAAAA,QAAQ,CAACI,UAAT,GAAsBF,IAAI,CAACG,OAA3B,CALkD,CAMlD;;AACA,MAAGH,IAAI,CAACC,MAAL,KAAgB,GAAnB,EAAuB;AACrBG,IAAAA,KAAK,CAACJ,IAAI,CAACG,OAAN,CAAL;AACA,WAAOE,OAAO,CAACC,MAAR,CAAeN,IAAI,CAACG,OAApB,CAAP;AACD;;AACD,SAAOL,QAAP;AACD,CAZD,EAYG,UAAUS,KAAV,EAAiB;AAClB,SAAOF,OAAO,CAACC,MAAR,CAAeC,KAAf,CAAP;AACD,CAdD;AAgBA;;;;AAGA,OAAO,SAASC,IAAT,CAAcC,GAAd,EAAkBT,IAAlB,EAAuB;AAC5B,SAAOP,KAAK,CAAC;AACXiB,IAAAA,MAAM,EAAC,MADI;AAEXD,IAAAA,GAAG,EAAHA,GAFW;AAGXT,IAAAA,IAAI,EAACN,EAAE,CAACiB,SAAH,CAAaX,IAAb,CAHM;AAIXY,IAAAA,OAAO,EAAC,KAJG;AAKXC,IAAAA,OAAO,EAAE;AACP,0BAAoB,gBADb;AAEP,sBAAgB;AAFT;AALE,GAAD,CAAZ;AAUD;AAED;;;;;AAIA,OAAO,SAASC,UAAT,CAAoBL,GAApB,EAAwBT,IAAxB,EAA6B;AAClC,SAAOP,KAAK,CAAC;AACXiB,IAAAA,MAAM,EAAC,MADI;AAEXD,IAAAA,GAAG,EAAHA,GAFW;AAGXT,IAAAA,IAAI,EAACN,EAAE,CAACiB,SAAH,CAAaX,IAAb,EAAkB;AAACe,MAAAA,WAAW,EAAC;AAAb,KAAlB,CAHM;AAIXH,IAAAA,OAAO,EAAC,KAJG;AAKXC,IAAAA,OAAO,EAAE;AACP,0BAAoB,gBADb;AAEP,sBAAgB;AAFT;AALE,GAAD,CAAZ;AAUD;AACD;;;;AAGA,OAAO,SAASG,SAAT,CAAmBP,GAAnB,EAAuBT,IAAvB,EAA4B;AACjC,SAAOP,KAAK,CAAC;AACXiB,IAAAA,MAAM,EAAC,MADI;AAEXD,IAAAA,GAAG,EAAHA,GAFW;AAGXT,IAAAA,IAAI,EAAJA,IAHW;AAIXY,IAAAA,OAAO,EAAC;AAJG,GAAD,CAAZ;AAMD;AACD,OAAO,SAASK,GAAT,CAAcR,GAAd,EAAmBS,MAAnB,EAA2B;AAChC,SAAOzB,KAAK,CAAC;AACXiB,IAAAA,MAAM,EAAE,KADG;AAEXD,IAAAA,GAAG,EAAHA,GAFW;AAGXS,IAAAA,MAAM,EAANA,MAHW;AAGH;AACRN,IAAAA,OAAO,EAAE,KAJE;AAKXC,IAAAA,OAAO,EAAE;AACP,0BAAoB;AADb;AALE,GAAD,CAAZ;AASD","sourcesContent":["import axios from 'axios';\nimport qs from 'qs'\n\n// 全局配置\n// axios.defaults.headers.common[\"token\"] = \"\"\n// axios.defaults.headers.post[\"Content-Type\"] = 'application/x-www-form-urlencoded;charset=UTF-8';\naxios.defaults.baseURL = 'http://39.105.142.28:6677';\n\n\n// Add a response interceptor\naxios.interceptors.response.use(function (response) {\n  // 将后台的参数结果设置到response\n  let {data} = response;\n  response.data = data.data;\n  response.status = data.status;\n  response.statusText = data.message;\n  //统一异常处理\n  if(data.status !== 200){\n    alert(data.message);\n    return Promise.reject(data.message);\n  }\n  return response;\n}, function (error) {\n  return Promise.reject(error);\n});\n\n/**\n * 提交post请求 发送的数据为查询字符串，key=val&key=val\n*/\nexport function post(url,data){\n  return axios({\n    method:\"post\",\n    url,\n    data:qs.stringify(data),\n    timeout:10000,\n    headers: {\n      'X-Requested-With': 'XMLHttpRequest',\n      'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n    }\n  })\n}\n\n/**\n * 提交post请求 发送的数据为查询字符串，当参数为数组的时候适用该方法\n * ids=1&ids=2\n*/\nexport function post_array(url,data){\n  return axios({\n    method:\"post\",\n    url,\n    data:qs.stringify(data,{arrayFormat:\"repeat\"}),\n    timeout:10000,\n    headers: {\n      'X-Requested-With': 'XMLHttpRequest',\n      'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n    }\n  })\n}\n/**\n * 提交post请求 发送的数据为json字符串\n*/\nexport function post_json(url,data){\n  return axios({\n    method:\"post\",\n    url,\n    data,\n    timeout:10000\n  })\n}\nexport function get (url, params) {\n  return axios({\n    method: 'get',\n    url,\n    params, // get 请求时带的参数\n    timeout: 10000,\n    headers: {\n      'X-Requested-With': 'XMLHttpRequest'\n    }\n  })\n}"]}]}